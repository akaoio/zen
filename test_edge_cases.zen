# Edge Case Tests for ZEN Interpreter

# Test 1: Empty variable names
set  10
set "" 20

# Test 2: Special characters in variable names
set @ 30
set $var 40
set 123 50
set var-name 60
set var.name 70
set var[0] 80
set "var name" 90

# Test 3: Unicode variable names
set Ï€ 3.14159
set ä½ å¥½ "Hello"
set ðŸš€ "rocket"
set cafÃ© "coffee"

# Test 4: Reserved keywords as variables
set if 100
set while 110
set function 120
set return 130
set set 140
set print 150

# Test 5: Very long variable names
set abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 200

# Test 6: Null and undefined operations
set x null
print x
set y
print y

# Test 7: Variable shadowing
set x 1
set x 2
set x 3
print x

# Test 8: Complex expressions as values
set a 1 + 2 * 3
set b (4 + 5) * 6
set c a + b
print c

# Test 9: Self-referential assignments
set x x
set y x + 1
set x x + 1

# Test 10: Mixed type operations
set num 42
set str "42"
set result num + str
print result

# Test 11: Boolean edge cases
set t true
set f false
set weird "true"
set number 0
set empty ""

# Test 12: Array-like variable names
set arr[0] 100
set arr[1] 200
set arr[-1] 300
set arr[999999] 400

# Test 13: Object-like variable names
set obj.name "test"
set obj.value 123
set obj.nested.deep.value 456

# Test 14: Operators in values
set plus +
set minus -
set times *
set divide /

# Test 15: Escaping and quotes
set quote "He said \"Hello\""
set single 'Single quotes'
set mixed "Mix 'of' quotes"
set backslash "Path\\to\\file"
set newline "Line1\nLine2"
set tab "Col1\tCol2"

# Test 16: Numbers edge cases
set zero 0
set negative -42
set decimal 3.14159
set scientific 1.23e10
set hex 0xFF
set octal 0o77
set binary 0b1010
set infinity 999999999999999999999999999999999999999999999999999
set tiny 0.000000000000000000000000000000001

# Test 17: Empty and whitespace
set empty ""
set space " "
set spaces "   "
set tab "	"
set newlines "\n\n\n"

# Test 18: Printing undefined variables
print undefined_var
print this_does_not_exist
print null
print 

# Test 19: Assignment chains
set a = b = c = d = e = 100

# Test 20: Comments in weird places
set x 10 # This is x
set y # This is y
20
set z 30# No space before comment