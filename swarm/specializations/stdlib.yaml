name: stdlib
description: "built-in functions and standard library"
keywords: "builtin, print, file, json, yaml"
details: |
  - File I/O operations
  - String manipulation functions
  - Array and object methods
  - JSON/YAML parsing and generation
  - Date/time operations
focus_areas: |
  - Consistent API design
  - Error handling patterns
  - Integration with external libraries
  - Performance optimization
key_patterns: |
  ```c
  // Native function binding
  typedef Value* (*NativeFunc)(Evaluator*, Value** args, size_t argc);
  
  void stdlib_register(Evaluator* eval) {
      evaluator_register_native(eval, "print", stdlib_print);
      evaluator_register_native(eval, "len", stdlib_len);
      evaluator_register_native(eval, "type", stdlib_type);
  }
  
  // Error handling in stdlib
  Value* stdlib_read_file(Evaluator* eval, Value** args, size_t argc) {
      if (argc != 1 || args[0]->type != TYPE_STRING) {
          return value_error("File.read expects a string path");
      }
      
      FILE* file = fopen(args[0]->as.string->data, "r");
      if (!file) {
          return value_error("Failed to open file");
      }
      // ... read file ...
  }
  ```