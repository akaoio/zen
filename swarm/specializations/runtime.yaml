name: runtime
description: "execution engine and control flow"
keywords: "execute, eval, runtime, interpreter"
details: |
  - AST evaluation and interpretation
  - Control flow implementation (if, while, for)
  - Function call mechanics and stack frames
  - Scope chain management
  - Operator implementation
focus_areas: |
  - Efficient evaluation strategies
  - Proper scope handling
  - Stack frame management
  - Error propagation
key_patterns: |
  ```c
  // Visitor pattern for evaluation
  Value* eval_binary(Evaluator* eval, ASTNode* node) {
      Value* left = evaluate(eval, node->binary.left);
      Value* right = evaluate(eval, node->binary.right);
      
      switch (node->binary.op) {
          case OP_ADD:
              return value_add(left, right);
          case OP_SUB:
              return value_subtract(left, right);
      }
  }
  
  // Scope chain
  Scope* scope_push(Scope* parent) {
      Scope* scope = scope_new();
      scope->parent = parent;
      return scope;
  }
  ```