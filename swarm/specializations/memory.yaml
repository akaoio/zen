name: memory
description: "memory management and garbage collection"
keywords: "memory, gc, refcount, leak"
details: |
  - Reference counting implementation
  - Memory pool allocation strategies
  - Cycle detection and breaking
  - Resource cleanup patterns
  - Memory debugging helpers
focus_areas: |
  - Zero memory leaks (valgrind-clean)
  - Efficient allocation patterns
  - Proper cleanup in all paths
  - Debug memory tracking
key_patterns: |
  ```c
  // Memory allocation with tracking
  void* zen_malloc(size_t size) {
      void* ptr = malloc(size);
      if (!ptr) {
          error_out_of_memory();
          return NULL;
      }
      #ifdef DEBUG_MEMORY
      track_allocation(ptr, size);
      #endif
      return ptr;
  }
  
  // Cleanup pattern
  void cleanup(Resources* res) {
      if (!res) return;
      
      // Free in reverse order of allocation
      free(res->buffer);
      string_unref(res->name);
      scope_free(res->scope);
      free(res);
  }
  ```